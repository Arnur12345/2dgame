const fs = require('fs');
const path = require('path');

console.log('üî• –ù–∞—á–∏–Ω–∞—é –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ Firebase...\n');

const files = [
  {
    path: 'src/App.tsx',
    replacements: [
      {
        from: /import { generateRandomColor, type Player, demoService } from '\.\/services\/localMultiplayer';/g,
        to: "import { generateRandomColor, type Player } from './services/firebase';"
      }
    ]
  },
  {
    path: 'src/hooks/useRealtimePlayers.ts',
    replacements: [
      {
        from: /import { type Player, playerService } from '\.\.\/services\/localMultiplayer';/g,
        to: "import { type Player, playerService } from '../services/firebase';"
      }
    ]
  },
  {
    path: 'src/hooks/usePlayerMovement.ts',
    replacements: [
      {
        from: /import { playerService } from '\.\.\/services\/localMultiplayer';/g,
        to: "import { playerService } from '../services/firebase';"
      }
    ]
  },
  {
    path: 'src/components/GameField.tsx',
    replacements: [
      {
        from: /import { type Player } from '\.\.\/services\/localMultiplayer';/g,
        to: "import { type Player } from '../services/firebase';"
      }
    ]
  },
  {
    path: 'src/components/PlayerList.tsx',
    replacements: [
      {
        from: /import { type Player, demoService } from '\.\.\/services\/localMultiplayer';/g,
        to: "import { type Player } from '../services/firebase';"
      }
    ]
  }
];

let totalReplacements = 0;
let processedFiles = 0;

files.forEach(fileConfig => {
  try {
    if (!fs.existsSync(fileConfig.path)) {
      console.log(`‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${fileConfig.path}`);
      return;
    }

    let content = fs.readFileSync(fileConfig.path, 'utf8');
    let fileReplacements = 0;

    fileConfig.replacements.forEach(replacement => {
      const matches = content.match(replacement.from);
      if (matches) {
        content = content.replace(replacement.from, replacement.to);
        fileReplacements += matches.length;
      }
    });

    if (fileReplacements > 0) {
      fs.writeFileSync(fileConfig.path, content);
      console.log(`‚úÖ ${fileConfig.path} - –∑–∞–º–µ–Ω–µ–Ω–æ –∏–º–ø–æ—Ä—Ç–æ–≤: ${fileReplacements}`);
      totalReplacements += fileReplacements;
    } else {
      console.log(`‚ÑπÔ∏è  ${fileConfig.path} - –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è`);
    }
    
    processedFiles++;
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${fileConfig.path}:`, error.message);
  }
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥–µ–º–æ-–∫–Ω–æ–ø–æ–∫ –∏–∑ PlayerList
try {
  const playerListPath = 'src/components/PlayerList.tsx';
  if (fs.existsSync(playerListPath)) {
    let content = fs.readFileSync(playerListPath, 'utf8');
    
    // –£–¥–∞–ª—è–µ–º –∏–º–ø–æ—Ä—Ç demoService –µ—Å–ª–∏ –æ–Ω –æ—Å—Ç–∞–ª—Å—è
    content = content.replace(/, demoService/g, '');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–µ–∫—Ü–∏—è —Å –¥–µ–º–æ-–∫–Ω–æ–ø–∫–∞–º–∏
    if (content.includes('demo-controls')) {
      console.log(`‚ÑπÔ∏è  –ù–∞–π–¥–µ–Ω–∞ —Å–µ–∫—Ü–∏—è demo-controls –≤ PlayerList.tsx`);
      console.log(`‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é —É–¥–∞–ª–∏—Ç—å —Å–µ–∫—Ü–∏—é —Å –¥–µ–º–æ-–∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω-–≤–µ—Ä—Å–∏–∏`);
    }
    
    fs.writeFileSync(playerListPath, content);
  }
} catch (error) {
  console.log(`‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ PlayerList.tsx:`, error.message);
}

console.log('\nüéØ –°–≤–æ–¥–∫–∞:');
console.log(`üìÅ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${processedFiles}`);
console.log(`üîÑ –í—Å–µ–≥–æ –∑–∞–º–µ–Ω: ${totalReplacements}`);

if (totalReplacements > 0) {
  console.log('\nüî• –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ Firebase –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ src/services/firebase.ts');
  console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Realtime Database –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –≤ Firebase Console');
  console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: npm run dev');
  console.log('4. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–∞');
} else {
  console.log('\nü§î –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Firebase –∏–ª–∏ —Ñ–∞–π–ª—ã –∏–∑–º–µ–Ω–µ–Ω—ã.');
}

console.log('\nüìñ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: —Å–º. FIREBASE_SETUP.md'); 